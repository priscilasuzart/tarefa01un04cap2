#include <stdio.h>
#include "pico/stdlib.h"
#include "hardware/gpio.h"

uint linhas[4] = {1, 2, 3, 4}; // Vetor para as linhas
uint colunas[4] = {5, 6, 7, 8}; // Vetor para as colunas


char MAPA_TECLAS[4][4] = { // Matriz para mapear as teclas do teclado matricial 4x4 para os caracteres correspondentes a cada tecla pressionada (0-9, A-D, *, #) 
    '1', '2', '3', 'A',
    '4', '5', '6', 'B',
    '7', '8', '9', 'C',
    '*', '0', '#', 'D'
};



void inicia_teclado() { // Função para iniciar o teclado

    for (int i = 0; i < 4; i++) {
        gpio_init(linhas[i]);
        gpio_set_dir(linhas[i], GPIO_OUT);
        // gpio_put(linhas[i], 1);
    }

    for (int i = 0; i < 4; i++) {
        gpio_init(colunas[i]);
        gpio_set_dir(colunas[i], GPIO_IN);
        gpio_pull_down(colunas[i]);
    }

}

char ler_teclado() {

    // Verifica se alguma tecla foi pressionada
    for(int i = 0; i < 4; i++) {
        gpio_put(linhas[i], 1); // Liga a linha atual
        // Verifica as colunas para ver se alguma tecla foi pressionada
        for(int j =0; j < 4; j++){

            if (gpio_get(colunas[j])) { // Verifica se a coluna atual está em nível alto (tecla pressionada)

                gpio_put(linhas[i], 0); // Desliga a linha antes de retornar
                sleep_ms(50); // Aguarda 50ms para evitar o efeito de bouncing

                return MAPA_TECLAS[i][j]; // Retorna a tecla pressionada

            }
        }
        gpio_put(linhas[i], 0); // Desliga a linha atual antes de passar para a próxima linha (caso não tenha tecla pressionada)
    }
    return '\0'; // Retorna \0 caso não tenha tecla pressionada

}

#define LED_VERMELHA 13// Define o pino do led vermelho

while (1) {
        char tecla = ler_teclado (); // Lê a tecla pressionada
        if (tecla == 'A')
        {
            gpio_put(LED_VERMELHO, 1); // Acende o led vermelho 
            gpio_put(LED_VERMELHO, 1); // Acende o led vermelho 
        } else {
            gpio_put(LED_VERMELHO, 0); // Desliga o led Vermelho 
            gpio_put(LED_VERMELHO, 0); // Desliga o led vermelho 
        }
        sleep_ms(2000);
    }
    
}
void BOTAO_A
gpio init(LED VERMELHO);
spio set dir (LED VERMELHO, GPIO OUT);
while (1) (
char tecla - ler _teclado(); // Lê a tecla pressionada if (tecla == '"A*)
gpio_put (LED_VERMELHO, 1); // Acende o led VERMELHO 
j else {
gpio_put(LED _VERMELHO, 0); // Desliga o led vermelho sleep_ms (2006);
}
}
